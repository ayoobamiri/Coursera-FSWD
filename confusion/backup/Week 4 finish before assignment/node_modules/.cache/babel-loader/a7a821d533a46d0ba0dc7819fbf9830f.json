{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { DISHES } from \"../shared/dishes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\").then(response => response.json()).then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + \"promotions\").then(response => response.json()).then(promos => dispatch(addPromos(promos)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Coursera FSWD/React/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","dishesLoading","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","addDishes","dishes","ADD_DISHES","fetchComments","dispatch","fetch","then","response","json","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","PROMOS_LOADING","promosFailed","PROMOS_FAILED","ADD_PROMOS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,MAAsC;AAC9DC,EAAAA,IAAI,EAAER,WAAW,CAACS,WAD4C;AAE9DC,EAAAA,OAAO,EAAE;AACPN,IAAAA,MAAM,EAAEA,MADD;AAEPC,IAAAA,MAAM,EAAEA,MAFD;AAGPC,IAAAA,MAAM,EAAEA,MAHD;AAIPC,IAAAA,OAAO,EAAEA;AAJF;AAFqD,CAAtC,CAAnB;AAYP,OAAO,MAAMI,aAAa,GAAG,OAAO;AAClCH,EAAAA,IAAI,EAAER,WAAW,CAACY;AADgB,CAAP,CAAtB;AAIP,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACxCN,EAAAA,IAAI,EAAER,WAAW,CAACe,aADsB;AAExCL,EAAAA,OAAO,EAAEI;AAF+B,CAAd,CAArB;AAKP,OAAO,MAAME,SAAS,GAAIC,MAAD,KAAa;AACpCT,EAAAA,IAAI,EAAER,WAAW,CAACkB,UADkB;AAEpCR,EAAAA,OAAO,EAAEO;AAF2B,CAAb,CAAlB;AAKP,OAAO,MAAME,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC/C,SAAOC,KAAK,CAACnB,OAAO,GAAG,UAAX,CAAL,CACJoB,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEG,QAAD,IAAcL,QAAQ,CAACM,WAAW,CAACD,QAAD,CAAZ,CAFvB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAME,cAAc,GAAIb,OAAD,KAAc;AAC1CN,EAAAA,IAAI,EAAER,WAAW,CAAC4B,eADwB;AAE1ClB,EAAAA,OAAO,EAAEI;AAFiC,CAAd,CAAvB;AAKP,OAAO,MAAMY,WAAW,GAAID,QAAD,KAAe;AACxCjB,EAAAA,IAAI,EAAER,WAAW,CAAC6B,YADsB;AAExCnB,EAAAA,OAAO,EAAEe;AAF+B,CAAf,CAApB;AAKP,OAAO,MAAMK,WAAW,GAAG,MAAOV,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAACW,aAAa,EAAd,CAAR;AAEA,SAAOV,KAAK,CAACnB,OAAO,GAAG,YAAX,CAAL,CACJoB,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEU,MAAD,IAAYZ,QAAQ,CAACa,SAAS,CAACD,MAAD,CAAV,CAFrB,CAAP;AAGD,CANM;AAQP,OAAO,MAAMD,aAAa,GAAG,OAAO;AAClCvB,EAAAA,IAAI,EAAER,WAAW,CAACkC;AADgB,CAAP,CAAtB;AAIP,OAAO,MAAMC,YAAY,GAAIrB,OAAD,KAAc;AACxCN,EAAAA,IAAI,EAAER,WAAW,CAACoC,aADsB;AAExC1B,EAAAA,OAAO,EAAEI;AAF+B,CAAd,CAArB;AAKP,OAAO,MAAMmB,SAAS,GAAID,MAAD,KAAa;AACpCxB,EAAAA,IAAI,EAAER,WAAW,CAACqC,UADkB;AAEpC3B,EAAAA,OAAO,EAAEsB;AAF2B,CAAb,CAAlB","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { DISHES } from \"../shared/dishes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment,\n  },\n});\n\n\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING,\n});\n\nexport const dishesFailed = (errmess) => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess,\n});\n\nexport const addDishes = (dishes) => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes,\n});\n\nexport const fetchComments = () => (dispatch) => {\n  return fetch(baseUrl + \"comments\")\n    .then((response) => response.json())\n    .then((comments) => dispatch(addComments(comments)));\n};\n\nexport const commentsFailed = (errmess) => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess,\n});\n\nexport const addComments = (comments) => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments,\n});\n\nexport const fetchPromos = () => (dispatch) => {\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + \"promotions\")\n    .then((response) => response.json())\n    .then((promos) => dispatch(addPromos(promos)));\n};\n\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING,\n});\n\nexport const promosFailed = (errmess) => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess,\n});\n\nexport const addPromos = (promos) => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos,\n});\n"]},"metadata":{},"sourceType":"module"}