{"ast":null,"code":"import * as ActionTypes from \"./ActionTypes\";\nimport { DISHES } from \"../shared/dishes\";\nimport { baseUrl } from \"../shared/baseUrl\";\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  return fetch(baseUrl + \"dishes\").then(response => response.json()).then(dishes => dispatch(addDishes(dishes)));\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + \"comments\").then(response => response.json()).then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + \"promotions\").then(response => response.json()).then(promos => dispatch(addPromos(promos)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});","map":{"version":3,"sources":["/Users/macbookpro/Desktop/Coursera FSWD/React/confusion/src/redux/ActionCreators.js"],"names":["ActionTypes","DISHES","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","fetch","then","response","json","dishes","addDishes","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","ADD_DISHES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","PROMOS_LOADING","promosFailed","PROMOS_FAILED","ADD_PROMOS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,MAAsC;AAC9DC,EAAAA,IAAI,EAAER,WAAW,CAACS,WAD4C;AAE9DC,EAAAA,OAAO,EAAE;AACPN,IAAAA,MAAM,EAAEA,MADD;AAEPC,IAAAA,MAAM,EAAEA,MAFD;AAGPC,IAAAA,MAAM,EAAEA,MAHD;AAIPC,IAAAA,OAAO,EAAEA;AAJF;AAFqD,CAAtC,CAAnB;AAUP,OAAO,MAAMI,WAAW,GAAG,MAAOC,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAACC,aAAa,CAAC,IAAD,CAAd,CAAR;AAEA,SAAOC,KAAK,CAACZ,OAAO,GAAG,QAAX,CAAL,CACJa,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEG,MAAD,IAAYN,QAAQ,CAACO,SAAS,CAACD,MAAD,CAAV,CAFrB,CAAP;AAGD,CANM;AAQP,OAAO,MAAML,aAAa,GAAG,OAAO;AAClCL,EAAAA,IAAI,EAAER,WAAW,CAACoB;AADgB,CAAP,CAAtB;AAIP,OAAO,MAAMC,YAAY,GAAIC,OAAD,KAAc;AACxCd,EAAAA,IAAI,EAAER,WAAW,CAACuB,aADsB;AAExCb,EAAAA,OAAO,EAAEY;AAF+B,CAAd,CAArB;AAKP,OAAO,MAAMH,SAAS,GAAID,MAAD,KAAa;AACpCV,EAAAA,IAAI,EAAER,WAAW,CAACwB,UADkB;AAEpCd,EAAAA,OAAO,EAAEQ;AAF2B,CAAb,CAAlB;AAKP,OAAO,MAAMO,aAAa,GAAG,MAAOb,QAAD,IAAc;AAC/C,SAAOE,KAAK,CAACZ,OAAO,GAAG,UAAX,CAAL,CACJa,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEW,QAAD,IAAcd,QAAQ,CAACe,WAAW,CAACD,QAAD,CAAZ,CAFvB,CAAP;AAGD,CAJM;AAMP,OAAO,MAAME,cAAc,GAAIN,OAAD,KAAc;AAC1Cd,EAAAA,IAAI,EAAER,WAAW,CAAC6B,eADwB;AAE1CnB,EAAAA,OAAO,EAAEY;AAFiC,CAAd,CAAvB;AAKP,OAAO,MAAMK,WAAW,GAAID,QAAD,KAAe;AACxClB,EAAAA,IAAI,EAAER,WAAW,CAAC8B,YADsB;AAExCpB,EAAAA,OAAO,EAAEgB;AAF+B,CAAf,CAApB;AAKP,OAAO,MAAMK,WAAW,GAAG,MAAOnB,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAACoB,aAAa,EAAd,CAAR;AAEA,SAAOlB,KAAK,CAACZ,OAAO,GAAG,YAAX,CAAL,CACJa,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEkB,MAAD,IAAYrB,QAAQ,CAACsB,SAAS,CAACD,MAAD,CAAV,CAFrB,CAAP;AAGD,CANM;AAQP,OAAO,MAAMD,aAAa,GAAG,OAAO;AAClCxB,EAAAA,IAAI,EAAER,WAAW,CAACmC;AADgB,CAAP,CAAtB;AAIP,OAAO,MAAMC,YAAY,GAAId,OAAD,KAAc;AACxCd,EAAAA,IAAI,EAAER,WAAW,CAACqC,aADsB;AAExC3B,EAAAA,OAAO,EAAEY;AAF+B,CAAd,CAArB;AAKP,OAAO,MAAMY,SAAS,GAAID,MAAD,KAAa;AACpCzB,EAAAA,IAAI,EAAER,WAAW,CAACsC,UADkB;AAEpC5B,EAAAA,OAAO,EAAEuB;AAF2B,CAAb,CAAlB","sourcesContent":["import * as ActionTypes from \"./ActionTypes\";\nimport { DISHES } from \"../shared/dishes\";\nimport { baseUrl } from \"../shared/baseUrl\";\n\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment,\n  },\n});\n\nexport const fetchDishes = () => (dispatch) => {\n  dispatch(dishesLoading(true));\n\n  return fetch(baseUrl + \"dishes\")\n    .then((response) => response.json())\n    .then((dishes) => dispatch(addDishes(dishes)));\n};\n\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING,\n});\n\nexport const dishesFailed = (errmess) => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess,\n});\n\nexport const addDishes = (dishes) => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes,\n});\n\nexport const fetchComments = () => (dispatch) => {\n  return fetch(baseUrl + \"comments\")\n    .then((response) => response.json())\n    .then((comments) => dispatch(addComments(comments)));\n};\n\nexport const commentsFailed = (errmess) => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess,\n});\n\nexport const addComments = (comments) => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments,\n});\n\nexport const fetchPromos = () => (dispatch) => {\n  dispatch(promosLoading());\n\n  return fetch(baseUrl + \"promotions\")\n    .then((response) => response.json())\n    .then((promos) => dispatch(addPromos(promos)));\n};\n\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING,\n});\n\nexport const promosFailed = (errmess) => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess,\n});\n\nexport const addPromos = (promos) => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos,\n});\n"]},"metadata":{},"sourceType":"module"}